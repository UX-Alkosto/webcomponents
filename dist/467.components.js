(self.webpackChunkwebcomponents=self.webpackChunkwebcomponents||[]).push([[467],{467:(t,e,s)=>{"use strict";s.r(e),s.d(e,{default:()=>n});class n extends HTMLElement{static get observedAttributes(){return["icon"]}constructor(){super(),this._shadowRoot=this.attachShadow({mode:"closed"}),this._shadowRoot.appendChild(o.content.cloneNode(!0)),this._shadowRoot.appendChild(i.content.cloneNode(!0))}connectedCallback(){const t=this._shadowRoot.querySelector("a");this.hasAttribute("title")&&t.setAttribute("title",this.getAttribute("title")),this.hasAttribute("href")&&t.setAttribute("href",this.getAttribute("href")),this._handleClick(),this.hasAttribute("icon")&&(this._setIcon(),this._setIconStyles())}disconnectedCallback(){this.removeEventListener("click",this._handleClick)}_handleClick(){const t=this._shadowRoot.querySelector("a");this.addEventListener("click",(e=>t.click()))}_setIcon(){const t=this._shadowRoot.querySelectorAll("#icon");if(t.length)return Object.assign(t,{class:this.getAttribute("icon")});const e=document.createElement("span");return Object.assign(e,{id:"icon",classList:this.getAttribute("icon")}),this._shadowRoot.appendChild(e)}_setIconStyles(){if(this._shadowRoot.querySelectorAll("#icon-styles").length)return;const t=document.createElement("link");return Object.assign(t,{id:"icon-styles",rel:"stylesheet",href:"https://cdn.jsdelivr.net/gh/ux-alkosto/icons/style.min.css"}),this._shadowRoot.appendChild(t)}}const o=document.createElement("template"),i=document.createElement("template");i.innerHTML="<a>\n    <slot></slot>\n</a>",o.innerHTML="<style>\n    :host {\n        align-items: center;\n        cursor: pointer;\n        display: inline-block;\n    }\n    a {\n        color: var(--primary-color2);\n        text-decoration: underline;\n    }\n    span {\n        color: var(--primary-color1);\n    }\n</style>"}}]);