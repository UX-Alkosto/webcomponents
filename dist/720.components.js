(self.webpackChunkwebcomponents=self.webpackChunkwebcomponents||[]).push([[720],{720:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});class o extends HTMLElement{constructor(){super(),this._shadowRoot=this.attachShadow({mode:"closed"}),this._shadowRoot.appendChild(s.content.cloneNode(!0)),this._shadowRoot.appendChild(i.content.cloneNode(!0))}connectedCallback(){}_handleClick(){this.addEventListener("click",(t=>{window.location=this.getAttribute("href")}))}disconnectedCallback(){this.removeEventListener("click",this._handleClick)}}const s=document.createElement("template"),i=document.createElement("template");i.innerHTML="<slot></slot>",s.innerHTML="<style>\n    :host{\n        box-shadow: 0 2px 3px 2px rgba(0,0,0,.1);\n        padding: 1rem;\n        transition: ease-in-out .3s all;\n    }\n    :host(:hover),\n    :host(:focus){\n        box-shadow: 0 2px 5px 2px rgba(0,0,0,.2);\n    }\n    :host([is=product-item]) {\n        margin-top: 2rem;\n        text-align: center;\n    }\n    :host([is=product-item]) ::slotted(img) {\n        margin-top: -3rem;\n        max-width: 100%;\n        width: auto;\n    }\n    :host([is=product-item]) ::slotted(p) {\n        text-align: initial;\n    }\n    ::slotted(h1),\n    ::slotted(h2),\n    ::slotted(h3),\n    ::slotted(strong) {\n        color: var(--primary-color2);\n    }\n    ::slotted(p) {\n        color: var(--text-color1);\n        display: none;\n        font-size: var(--font-base);\n        line-height: 1.572em;\n    }\n    @media screen and (min-width: 768px) {\n        ::slotted(p) {\n            display: block;\n        }\n    }\n</style>"}}]);