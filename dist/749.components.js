(self.webpackChunkwebcomponents=self.webpackChunkwebcomponents||[]).push([[749],{749:(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>o});class o extends HTMLElement{constructor(){super(),this._shadowRoot=this.attachShadow({mode:"closed"}),this._shadowRoot.appendChild(r.content.cloneNode(!0)),this._shadowRoot.appendChild(i.content.cloneNode(!0))}connectedCallback(){const n=document.createElement("section"),t=document.createElement("img"),e=this._shadowRoot.querySelector(".container"),o=this._shadowRoot.querySelector(".content");switch(this.hasAttribute("src")&&(n.classList.add(this.type),t.setAttribute("loading","lazy"),t.setAttribute("src",this.getAttribute("src")),n.appendChild(t)),this.type){case"left":case"left-cut":case"full":e.insertBefore(n,o);break;default:e.appendChild(n)}}get type(){return this.getAttribute("type")||"left"}}const r=document.createElement("template"),i=document.createElement("template");i.innerHTML='<div class="container">\n    <section class="content">\n        <slot></slot>\n    </section>\n</div>',r.innerHTML="<style>\n    :host {\n        color: var(--text-color1);\n        display: flex;\n        flex-wrap: wrap;\n        font-size: var(--font-base, 14px);\n        justify-content: center;\n        overflow: hidden;\n    }\n    :host([type=full]) .container {\n        flex-wrap: wrap;\n        max-width: 1204px;\n    }\n    :host([type=full]) .content {\n        text-align: center;\n        align-items: stretch;\n    }\n    :host([type=left]),\n    :host([type=right]) {\n        background-color: var(--k-brand-banner-background-color, #F5F5F5);\n    }\n    :host([type=left-cut]) .container,\n    :host([type=right-cut]) .container {\n        background-color: var(--k-brand-banner-background-color, #F5F5F5);\n    }\n    :host([type=left]) .content,\n    :host([type=right]) .content {\n        align-items: flex-start;\n    }\n    ::slotted(h1),\n    ::slotted(h2),\n    ::slotted(h3),\n    ::slotted(strong) {\n        color: var(--primary-color2);\n    }\n    ::slotted(h2) {\n        font-size: 1.125rem;\n    }\n    ::slotted(h3) {\n        font-size: 1rem;\n    }\n    ::slotted(p) {\n        color: var(--text-color1);\n        font-size: var(--font-base);\n        line-height: 1.572em;\n    }\n    .container {\n        display: flex;\n        flex: 1;\n        flex-direction: column;\n        height: 100%;\n        justify-content: center;\n        max-width: 1204px;\n    }\n    section {\n        align-items: center;\n        display: flex;\n    }\n    .content {\n        flex-direction: column;\n        justify-content: center;\n        padding: 2rem;\n        order: 2;\n    }\n    .full{\n        flex-basis: 100%;\n    }\n    .left,\n    .left-cut,\n    .right,\n    .right-cut {\n        flex-basis: 100%;\n    }\n    .full img,\n    .left img,\n    .left-cut img,\n    .right img,\n    .right-cut img {\n        height: auto;\n        max-width: 100%;\n        object-fit: cover;\n        width: 100%;\n    }\n    @media screen and (min-width: 768px) {\n        :host([type=full]) .content{\n            align-items: center;\n            flex-basis: 100%;\n        }\n        .container {\n            flex-direction: row;\n            justify-content: space-between;\n        }\n        .content {\n            order: unset;\n        }\n        .left,\n        .right{\n            flex-basis: 60%;\n        }\n        .left-cut,\n        .right-cut {\n            flex-basis: 40%;\n        }\n        .left-cut {\n            margin-left: 0;\n            filter: drop-shadow(8px 0 0 var(--primary-color2));\n        }\n        .left-cut img {\n            clip-path: polygon(0 0, 0 100%, 90% 100%, 100% 0);\n        }\n        .right-cut {\n            margin:right: 0;\n            filter: drop-shadow(-8px 0 0 var(--primary-color2));\n        }\n        .right-cut img {\n            clip-path: polygon(0 0, 10% 100%, 100% 100%, 100% 0);\n        }\n    }\n</style>"}}]);