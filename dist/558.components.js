(self.webpackChunkwebcomponents=self.webpackChunkwebcomponents||[]).push([[558],{558:(t,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});class o extends HTMLElement{constructor(){super(),this._shadowRoot=this.attachShadow({mode:"closed"}),this._shadowRoot.appendChild(r.content.cloneNode(!0))}connectedCallback(){const t=document.createElement("button");t.innerHTML=i.innerHTML,this.hasAttribute("title")&&t.setAttribute("title",this.getAttribute("title")),this.hasAttribute("type")&&t.setAttribute("type",this.getAttribute("type")),this.hasAttribute("disabled")&&t.setAttribute("disabled",this.getAttribute("disabled")),this.hasAttribute("href")&&this._handleClick(),this._shadowRoot.appendChild(t)}_handleClick(){this.addEventListener("click",(t=>{window.location=this.getAttribute("href")}))}disconnectedCallback(){this.removeEventListener("click",this._handleClick)}}const r=document.createElement("template"),i=document.createElement("template");i.innerHTML="<slot></slot>",r.innerHTML="<style>\n    :host {\n        display: flex;\n        cursor: pointer;\n        outline: none;\n        width: auto;\n    }\n    button {\n        align-items: center;\n        background-color: var(--button-primary-background-color);\n        border: var(--button-primary-border);\n        border-radius: var(--button-radius);\n        color: var(--button-primary-text-color);\n        cursor: pointer;\n        display: flex;\n        flex: 1;\n        font-size: 1rem;\n        font-weight: bold;\n        justify-content: center;\n        line-height: 1.125rem;\n        min-height: 56px;\n        outline: none;\n        padding: 16px 24px;\n        transition: ease-in-out .3s all;\n        width: 100%;\n    }\n    :host([btn-style=outline]) button {\n        background-color: var(--button-outline-background-color);\n        border: var(--button-outline-border);\n        color: var(--button-outline-text-color);\n    }\n    :host(:focus) button,\n    :host(:hover) button,\n    button:focus,\n    button:hover,\n    :host([btn-style=outline]) button:focus,\n    :host([btn-style=outline]) button:hover {\n        background-color: var(--button-primary-background-color-hover);\n        border-color: var(--button-primary-background-color-hover);\n    }\n    :host([btn-style=outline]:focus) button,\n    :host([btn-style=outline]:hover) button,\n    :host([btn-style=outline]) button:focus,\n    :host([btn-style=outline]) button:hover {\n        color: var(--button-primary-text-color-hover);\n    }\n</style>"}}]);